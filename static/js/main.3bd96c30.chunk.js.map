{"version":3,"sources":["components/Users/users.module.css","assets/images/preloader.svg","components/Profile/MyPosts/Post/Post.module.css","components/Navbar/Navbar.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","redux/dialogs-reducer.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/MessageItem.jsx","utils/validators/validators.js","components/common/FormsControls/FormsControls.js","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","api/api.js","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","components/common/Preloader/Preloader.js","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","redux/profile-reducer.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/Dialogs/Dialogs.module.css","components/common/FormsControls/FormsControls.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/user.png","components/common/Paginator/Paginator.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","console","log","s","item","Navbar","className","nav","to","activeClassName","activeLink","active","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","DialogItem","props","path","dialog","Message","required","value","maxLengthCreator","maxLength","length","FormControl","input","meta","touched","error","children","hasError","styles","formControl","Textarea","restProps","child","Input","createField","placeholder","validators","component","text","Field","validate","maxLength50","reduxForm","form","onSubmit","handleSubmit","Dialogs","dialogsPage","dialogsElements","map","d","key","messagesElements","m","isAuth","dialogsItems","values","sendMessage","mapStateToPropsForRedirect","auth","compose","connect","dispatch","Component","RedirectComponent","this","React","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","email","password","rememberMe","captcha","securityAPI","updateObjectInArray","items","itemId","objPropName","newObjProps","u","users","totalUsersCount","isFetching","followingInProgress","fake","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","p","cn","selectedPage","pageNumber","e","User","user","src","photos","small","userPhoto","disabled","some","Users","Preloader","style","backgroundColor","preloader","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","bind","page","totalCount","ProfileStatusWithHooks","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onChange","currentTarget","autoFocus","onBlur","ProfileDataFormReduxForm","formSummaryError","Object","keys","contacts","contact","ProfileData","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","descriptionBlock","large","mainPhoto","target","files","initialValues","posts","likesCount","getUserProfile","profileReducer","newPost","newPostText","postId","Post","like","maxLength10","AddNewPostFormRedux","MyPosts","memo","postsElements","reverse","createRef","postsBlock","addPost","MyPostsContainer","profilePage","addPostActionCreator","Profile","ProfileContainer","params","authorizedUserId","history","refreshProfile","prevProps","prevState","snapshot","file","getState","stopSubmit","_error","Promise","reject","withRouter","Header","header","loginBlock","login","logout","SET_USER_DATA","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","getCaptchaUrl","url","authReducer","HeaderContainer","LoginReduxForm","initialized","globalError","appReducer","sidebarReducer","reducers","combineReducers","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","App","catchAllUnhandledErrors","reason","promise","alert","initializeApp","addEventListener","removeEventListener","exact","render","DialogsContainer","AppContainer","all","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.3bd96c30.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__20yyg\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.af6fc50c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1HYtF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3urEH\",\"item\":\"Navbar_item__2uqwb\",\"activeLink\":\"Navbar_activeLink__2kQrm\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nconsole.log(s);\r\n\r\nlet c1 = \"item\";\r\nlet c2 = \"active\";\r\n// \"item active\"\r\nlet classes = c1 + \" \" + c2;\r\nlet classesNew = `${s.item} ${c2}`;\r\n\r\n\r\nconst Navbar = () => {\r\n    return <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/profile\" activeClassName = {s.activeLink}> Profile</NavLink>\r\n        </div>\r\n        <div className={`${s.item} ${s.active}`}>\r\n            <NavLink to=\"/dialogs\">Dialogs</NavLink>\r\n        </div>\r\n\r\n        <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/news\">News</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/music\">Music</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/settings\">Settings</NavLink>\r\n        </div>\r\n    </nav>\r\n}\r\n\r\nexport default Navbar;","\r\nconst SEND_MESSAGE = 'SEND_MESSAGE';\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\nexport default dialogsReducer;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\n    \r\nexport default Message;","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n} ","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength50]}\r\n                       placeholder='Enter your message' name=\"newMessageBody\" />\r\n            </div>\r\n            <div>\r\n                <button>Send222</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'dialog-add-message-form'})(AddMessageForm);\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/MessageItem\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm.jsx\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} />  );\r\n    let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id} /> );\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} /> ;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{ messagesElements }</div>\r\n\r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator());\t      \r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers:     {\r\n        \"API-KEY\": \"6b088936-44f8-44ff-96d6-b535f33f4538\"\r\n        \r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status });\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile );\r\n    }\t      \r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe, captcha });\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`);\r\n    }\r\n}","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n    fake: 10\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React,  {useState}  from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={styles.paginator}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\n\r\nexport default Paginator; ","import React from 'react';\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n       <div>\r\n                <span>\r\n                    <div>\r\n                       <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                             className={styles.userPhoto}/>\r\n                       </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingInProgress\r\n                                .some(id => id === user.id)}\r\n                                      onClick={() => { unfollow(user.id) }}>\r\n                                Unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => { follow(user.id) }}>\r\n                                      Follow</button>}\r\n\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"user.location.country\"}</div>\r\n                        <div>{\"user.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n            </div>)\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                    totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     key={u.id}\r\n                                     unfollow={props.unfollow}\r\n                                     follow={props.follow}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\nexport default Users;","import React from 'react';\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div  style={ { backgroundColor: 'white' } }>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader; ","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n    return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\nexport const countSomethingDifficult = (state) => {\r\n    debugger\r\n    //for... math... big arrays\r\n    let count = 23;\r\n    return count;\r\n}\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow, toggleFollowingProgress, requestUsers\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers})\r\n)(UsersContainer)","\r\nimport s from './ProfileInfo.module.css';\r\nimport React, {useState, useEffect} from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n    \r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n            <div>\r\n            <b>Status: </b> <span onDoubleClick={ activateEditMode }>{props.status || \"-------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode }\r\n                       value={status} />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks; ","import React from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n\r\n    deactivateEditMode() {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || \"-------\"}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true}\r\n                           onBlur={this.deactivateEditMode.bind(this)}\r\n                           value={this.state.status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div><button>save</button></div>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: { createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"} )}\r\n        </div>\r\n\r\n        <div>\r\n            <b>My professional skills</b>:\r\n            { createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea  )}\r\n        </div>\r\n\r\n\r\n        <div>\r\n            <b>About me</b>:\r\n            { createField(\"About me\", \"aboutMe\", [], Textarea  )}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}>\r\n            <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n   \r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto} />\r\n                { isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n                { editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData goToEditMode={() => {setEditMode(true)} } profile={profile} isOwner={isOwner}/> }\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n        {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\r\n        <div>\r\n            <b>Full name</b>: {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n        <div>\r\n            <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n\r\n        <div>\r\n            <b>About me</b>: {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n\r\n        case SAVE_PHOTO_SUCCESS:\r\n            debugger;\r\n            return {...state, profile: {...state.profile, photos: action.photos }}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    try {\r\n        let response = await profileAPI.updateStatus(status);\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    } catch(error) {\r\n        //\r\n    }\r\n}\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0] }));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n      { props.message }\r\n          <div>\r\n        <span>like</span> {props.like}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"}\r\n                   validate={[required, maxLength10]} />\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map(p => <Post  key={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","\r\nimport React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n           <ProfileInfo savePhoto={props.savePhoto}\r\n                         isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         saveProfile={props.saveProfile}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus, savePhoto, saveProfile} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId ) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n       // console.log(\"RENDER PROFILE\");\r\n        return (\r\n            <Profile {...this.props}\r\n                    isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}/>\r\n                )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    //console.log('mapStateToProps PROFILE')\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    })\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n\r\n        <div className={s.loginBlock}>\r\n            { props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n                : <NavLink to={'/login'}>Login</NavLink> }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'samurai-network/auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null // if null, then captcha is not required\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload:\r\n        {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        // success, get auth data\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n}\r\n\r\n\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n\r\n            { captchaUrl && <img src={captchaUrl} />}\r\n            { captchaUrl &&  createField(\"Symbols from image\", \"captcha\", [required], Input, {}) }\r\n\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n    globalError: null\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    debugger\r\n    //dispatch(somethingelse());\r\n    //dispatch(somethingelse());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\n\r\n\r\nexport default appReducer; ","\r\n\r\nlet initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\nimport {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n\r\n\r\nconst store = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow.store = store;\twindow.__store__ = store;\r\n\r\n\r\nexport default store;","import React from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader />} >\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    };\r\n} ","import React, {Component} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {BrowserRouter, Route, withRouter, Switch, Redirect} from \"react-router-dom\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\n//const DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\n//const ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\n\n\nclass App extends Component {\n    catchAllUnhandledErrors = (reason, promise) => {\n        alert(\"Some error occured\");\n        //console.error(promiseRejectionEvent);\n    }\n    componentDidMount() {\n        this.props.initializeApp();\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n    }\n    componentWillUnmount() {\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Switch>\n                        <Route exact path='/'\n                               render={() => <Redirect to={\"/profile\"}/>}/>\n\n                        <Route path='/dialogs'\n                               render={withSuspense(DialogsContainer)}/>\n\n                        <Route path='/profile/:userId?'\n                               render={withSuspense(ProfileContainer)}/>\n\n                        <Route path='/users'\n                               render={() => <UsersContainer/>}/>\n\n                        <Route path='/login'\n                               render={() => <LoginPage/>}/>\n\n                        <Route path='*'\n                               render={() => <div>404 NOT FOUND</div>}/>\n                    </Switch>\n\n                </div>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nconst SamuraiJSApp = (props) => {\n   return   <BrowserRouter>\n        <Provider store={store}>\n            <AppContainer />\n        </Provider>     \n    </BrowserRouter>\n}\n\n\nexport default SamuraiJSApp;","import * as serviceWorker from './serviceWorker';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SamuraiJSApp from \"./App\";\r\n\r\nReactDOM.render(<SamuraiJSApp/>, document.getElementById('root'));\r\n\r\n\r\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs___sObW\",\"dialogsItems\":\"Dialogs_dialogsItems__1Ecna\",\"active\":\"Dialogs_active__2NBUz\",\"messages\":\"Dialogs_messages__1Rl4_\",\"message\":\"Dialogs_message__ace8p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3kgff\",\"error\":\"FormsControls_error__2vPgJ\",\"formSummaryError\":\"FormsControls_formSummaryError__1yeFW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__LCE2k\",\"mainPhoto\":\"ProfileInfo_mainPhoto__3Xd13\",\"contact\":\"ProfileInfo_contact__LtUrc\"};","module.exports = __webpack_public_path__ + \"static/media/user.584ed1c6.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3kOF5\",\"pageNumber\":\"Paginator_pageNumber__2qHiq\",\"selectedPage\":\"Paginator_selectedPage__3RIIz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__24f-0\",\"posts\":\"MyPosts_posts__2Byip\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1-gf5\",\"loginBlock\":\"Header_loginBlock__Sk6td\"};"],"sourceRoot":""}